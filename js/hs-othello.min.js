var cellCount=64;var offsetBase=Math.sqrt(cellCount);var gameData,gameVue;function init(){resetGameData();placeInitialStones()}function resetGameData(){gameData={turn:1,cells:[],offsets:[1,offsetBase-1,offsetBase,offsetBase+1,-1,(offsetBase-1)*-1,offsetBase*-1,(offsetBase+1)*-1],stones:["O","X"],isFlipped:false,counts:[2,2]}}function placeInitialStones(){for(var i=0;i<cellCount;i++){switch(i){case cellCount/2-offsetBase/2-1:case cellCount/2+offsetBase/2:gameData.cells.push(gameData.stones[1]);break;case cellCount/2-offsetBase/2:case cellCount/2+offsetBase/2-1:gameData.cells.push(gameData.stones[0]);break;default:gameData.cells.push("");break}}}document.addEventListener("DOMContentLoaded",function(){init();gameVue=new Vue({el:"#app",data:gameData,methods:{play:function(cellNo){if(this.isGameOver||this.cells[cellNo]){return}this.isFlipped=false;for(var i=0;i<this.offsets.length;i++){var flipping=this.checkFlippable(cellNo,this.offsets[i]);this.flipStones(flipping)}if(this.isFlipped){Vue.set(this.cells,cellNo,this.currentStone);Vue.set(this.counts,this.turn,++this.counts[this.turn]);this.changeTurn()}},checkFlippable:function(target,offset){var current=target;var flipping=[];while(true){current+=offset;if(current>=cellCount||current<0){break}var checking=this.cells[current];if(checking){if(checking===this.currentStone){if(flipping.length){return flipping}break}else{flipping.push(current)}}else{break}if(offset!==8&&offset!==-8){if(current%8==0||current%8==7){break}}}return null},flipStones:function(flipping){if(flipping===null||!flipping.length){return}for(var i=0;i<flipping.length;i++){Vue.set(this.cells,flipping[i],this.currentStone);Vue.set(this.counts,this.turn,++this.counts[this.turn]);Vue.set(this.counts,1-this.turn,--this.counts[1-this.turn])}this.isFlipped=true},changeTurn:function(){this.turn=this.turn?0:1;if(this.isPass()){this.turn=this.turn?0:1}},isPass:function(){if(this.isGameOver){return false}for(var i=0;i<this.cells.length;i++){if(this.cells[i]){continue}for(var j=0;j<this.offsets.length;j++){if(this.checkFlippable(i,this.offsets[j])!==null){return false}}}return true}},computed:{currentStone:function(){return this.stones[this.turn]},isGameOver:function(){if(!this.counts[0]||!this.counts[1]||this.counts[0]+this.counts[1]===cellCount){return true}return false},result:function(){var diff=this.counts[0]-this.counts[1];if(diff===0){return"It's a draw"}else if(diff>0){return this.stones[0]+" wins!"}else{return this.stones[1]+" wins!"}}}})});